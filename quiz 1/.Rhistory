options("viewer"=NULL)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("devtools", "knitr", "xlsx")
ipak(packages)
install_github('ramnathv/rCharts')
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products")
install.packages(
"https://d396qusza40orc.cloudfront.net/devdataprod/DDPQuiz3_1.0.zip",
repos = NULL, type = "source"
)
library(DDPQuiz3)
installed.packages()
i <- installed.packages()
i[ i[,"Priority"] %in% c("base","recommended"), c("Package", "Priority")]
library(base)
base
loaded.packages()
sessionInfo()
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products")
#pregunta 2
sessionInfo()
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("app-quiz-1")
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("app-quiz-1")
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/app-quiz-1")
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("app-quiz-1")
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
setwd("/Users/pacha/Dropbox/Coursera/tareas y controles/Developing Data Products/quiz 1/")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("app-quiz-1")
runApp("app-quiz-1")
setwd("/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/quiz 1")
library(manipulate)
library(rCharts)
library(shiny)
# question 1
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
# question 2
dTable(airquality, sPaginationType = "full_numbers")
# question 4
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h2('Big text'),#comma needed here
h3('Sidebar')
),
mainPanel(
h3('Main Panel text')
)
))
# question 5
runApp("app-quiz-1")
# server.R
library(rCharts)
demografia <- read.csv('instancia.csv')
options(RCHART_WIDTH = 500)
shinyServer(function(input, output) {
output$lexplot <- renderChart2({
selected <- input$Age
Age <- subset(demografia, Age == selected & Year %in% seq(input$range[1], input$range[2], 1))
grafico <- hPlot(
x = "Year",
y = "People",
group = "Gender",
data = Age,
type = "spline")
grafico$yAxis(title = list(enabled = TRUE, text = 'Population count'),
labels = list(rotation = -0, align = 'right'),
replace = T)
grafico$xAxis(title = list(enabled = TRUE, text = 'Year'), labels = list(rotation = -30, align = 'right'), replace = T)
grafico$exporting(enabled = T)
return(grafico)
})
})
# ui.R
library(rCharts)
demografia <- read.csv('instancia.csv')
# Define UI
shinyUI(fluidPage(
# Title
titlePanel("Elder Population (64+ years) Count in Chile (1992-2006)"),
p("According to several studies in Chile we have an aging population and this means to change Public Policy guidelines. In 1995 we had 36 millions of elders in Latin America and by 2025 we will have 72+ millions of elders."),
p("Therefore, it would be interesting to visualize how our elder population is aging. In the pot we can observe that as years are passing, we have more and more 70+ years elders."),
p("The plot shows the elder population (64+ years) classified by age and as females and males (I also show the total population count) from 1992 to 2006."),
p(" "),
em("A good short article about aging population in Chile and Latin America is found in ", a("http://www.gerontologia.uchile.cl/docs/chien3.htm", href="http://www.gerontologia.uchile.cl/docs/chien3.htm")),
p(" "),
em("The data was obtained from the Human Mortality Database:", a("http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1", href="http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1")),
p(" "),
# Sidebar
sidebarLayout(
sidebarPanel(
selectInput(inputId = "Age",
label = "Select an age to display the number of elders of that age:",
choices = c("64",
"65",
"66",
"67",
"68",
"69",
"70",
"71",
"72",
"73",
"74",
"75",
"76",
"77",
"78",
"79",
"80",
"81",
"82",
"83",
"84",
"85",
"86",
"87",
"88",
"89",
"90",
"91",
"92",
"93",
"94",
"95",
"96",
"97",
"98",
"99",
"100",
"101",
"102",
"103",
"104",
"105",
"106",
"107",
"108",
"109",
"110+"),
selected = "64"),
sliderInput("range",
label = "Time period to display:",
min = 1992,
max = 2006,
value = c(1992, 2006),
format = "0000"),
helpText(p("Move the scroll bar to adjust the period of time displayed."), p("Plot Created on 21 Feb 2015 by Pachamaltese"), img(src="http://pachamaltese.github.io/logo.jpg"), p("This plot was created for JHU's Developing Data Products MOOC."))
),
# Show the plot
mainPanel(
strong("Give the plot a little time to load (the dataset is not small). The chart can be downloaded as PNG, PDF or SVG using the upper right icon in the plot. You can also show/hide series by clicking them below the plot."),
showOutput("lexplot", "highcharts")
)
)
))
library(rCharts)
x <- c(0.18, -1.54, 0.42, 0.95)
#And weights given by
w <- c(2, 1, 3, 1)
#Give the value of μ that minimizes the least squares equation ∑w(x-μ)^2
weighted.mean(x, w) # 0.1471
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit<- lm( y ~ x - 1 )
summary(fit) # 0.8263
data(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit) # -5.3445
corrXoverY <- 0.5
sdYoverX <- 2
beta <- corrXoverY*sdYoverX
beta # 1
corrXY <- 0.4
quiz1 <- 1.5
quiz2 <- quiz1*corrXY
quiz2 # 0.6
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
#What is the value of the first measurement if x were normalized (to have mean 0 and variance 1)?
mean <- mean(x)
sd <- sd(x)
(x-mean)/sd
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit) # 1.567
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
